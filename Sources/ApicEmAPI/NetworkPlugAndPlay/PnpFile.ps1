<#
This code is written and maintained by Darren R. Starr from Conscia Norway AS.

License :

Copyright (c) 2017 Conscia Norway AS

Permission is hereby granted, free of charge, to any person obtaining a 
copy of this software and associated documentation files (the "Software"), 
to deal in the Software without restriction, including without limitation 
the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the Software 
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in 
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION 
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#>

<#
    .SYNOPSIS
        Returns a network plug and play device template file

    .PARAMETER ApicHost
        The IP address (or resolvable FQDN) of the APIC-EM server

    .PARAMETER ServiceTicket
        The service ticket issued by a call to Get-APICEMServiceTicket

    .PARAMETER FileId
        The file id of the template to get

    .PARAMETER Name
        The name of the plug and play file object

    .EXAMPLE
        Get-APICEMServiceTicket -ApicHost 'apicvip.company.local'
        Get-APICEMNetworkPlugAndPlayFileTemplate -FileID 'dc846aaa-0f26-4d08-bbe0-4ae032971b5a'
        Remove-APICEMServiceTicket

    .NOTES
        This is the function which returns the raw template files, the Get-APICEMNetworkPlugAndPlayTemplates returns a list
        of files generated by the templates
#>
Function Get-APICEMNetworkPlugAndPlayFileTemplate {
    Param (
        [Parameter()]
        [string]$ApicHost,

        [Parameter()]
        [string]$ServiceTicket,

        [Parameter()]
        [string]$FileTemplateId,

        [Parameter()]
        [string]$Name
    )

    $session = Get-APICEMHostIPAndServiceTicket -ApicHost $ApicHost -ServiceTicket $ServiceTicket        

    $uri = 'https://' + $session.ApicHost + '/api/v1/pnp-file/template'
    
    if(-not [string]::IsNullOrEmpty($FileTemplateId)) {
        $uri += '?id=' + $FileTemplateId
    } elseif (-not [string]::IsNullOrEmpty($Name)) {
        $uri += '?name=' + $Name
    }

    $response = Invoke-APICEMGetRequest -ServiceTicket $session.ServiceTicket -Uri $uri

    return $response
}

<#
    .SYNOPSIS
        Returns a list of APIC-EM plug and play platform files

    .PARAMETER ApicHost
        The IP address (or resolvable FQDN) of the APIC-EM server

    .PARAMETER ServiceTicket
        The service ticket issued by a call to Get-APICEMServiceTicket

    .PARAMETER PlatformName
        Limits the list returned to only files related to the specified platform

    .EXAMPLE
        Get-APICEMServiceTicket -ApicHost 'apicvip.company.local'
        Get-APICEMNetworkPlugAndPlayPlatform
        Remove-APICEMServiceTicket
#>
Function Get-APICEMNetworkPlugAndPlayPlatformFile {
    Param (
        [Parameter()]
        [string]$ApicHost,

        [Parameter()]
        [string]$ServiceTicket,

        [Parameter()]
        [string]$PlatformName
    )

    $session = Get-APICEMHostIPAndServiceTicket -ApicHost $ApicHost -ServiceTicket $ServiceTicket        

    $uri = 'https://' + $session.ApicHost + '/api/v1/pnp-file/platform'

    if(-not [string]::IsNullOrEmpty($PlatformName)) {
        $uri += '?platformName=' + $PlatformName
    }

    $response = Invoke-APICEMGetRequest -ServiceTicket $session.ServiceTicket -Uri ('https://' + $session.ApicHost + '/api/v1/pnp-file/platform')

    return $response
}

<#
    .SYNOPSIS
        Returns a list of images and the platforms for which they are a default

    .PARAMETER ApicHost
        The IP address (or resolvable FQDN) of the APIC-EM server

    .PARAMETER ServiceTicket
        The service ticket issued by a call to Get-APICEMServiceTicket

    .PARAMETER Name
        The image name to search for

    .PARAMETER Platform
        The platform type to match

    .PARAMETER ProductID
        The product ID to match

    .PARAMETER MatchAny
        Match any search criteria provided

    .PARAMETER MatchAll
        Match all the search criteria provided

    .EXAMPLE
        Get-APICEMServiceTicket -ApicHost 'apicvip.company.local'
        Get-APICEMNetworkPlugAndPlayImages
        Remove-APICEMServiceTicket
#>
Function Get-APICEMNetworkPlugAndPlayImage {
    Param (
        [Parameter()]
        [string]$ApicHost,

        [Parameter()]
        [string]$ServiceTicket,

        [Parameter()]
        [string]$Name,

        [Paramter()]
        [string]$Platform,

        [Parameter()]
        [string]$ProductID,

        [Parameter()]
        [switch]$MatchAny,

        [Parameter()]
        [switch]$MatchAll
    )

    if($MatchAny -and $MatchAll) {
        throw [System.ArgumentException]::new(
            'Either MatchAny or MatchAll can be defined, but not both'
        )
    }

    $session = Get-APICEMHostIPAndServiceTicket -ApicHost $ApicHost -ServiceTicket $ServiceTicket        

    $uri = 'https://' + $session.ApicHost + '/api/v1/pnp-file/image'

    $uri = Add-StringParameterToUriIfNotEmpty -Uri $uri -Name 'name' -Value $Name
    $uri = Add-StringParameterToUriIfNotEmpty -Uri $uri -Name 'platform' -Value $Platform
    $uri = Add-StringParameterToUriIfNotEmpty -Uri $uri -Name 'productId' -Value $ProductID
    if($MatchAny) { $uri = Add-ParameterToUri -Uri $uri -Name 'match' -Value 'any' }
    if($MatchAll) { $uri = Add-ParameterToUri -Uri $uri -Name 'match' -Value 'all' }

    $response = Invoke-APICEMGetRequest -ServiceTicket $session.ServiceTicket -Uri $uri

    return $response.images
}

<#
    .SYNOPSIS
        Returns the default image for a given platform or product ID

    .PARAMETER ApicHost
        The IP address (or resolvable FQDN) of the APIC-EM server

    .PARAMETER ServiceTicket
        The service ticket issued by a call to Get-APICEMServiceTicket

    .PARAMETER PlatformID
        The name of the platform (example C3850)

    .PARAMETER ProductID
        The name of the product (example WS-C3850-24P)

    .EXAMPLE
        Get-APICEMServiceTicket -ApicHost 'apicvip.company.local'
        Get-APICEMNetworkPlugAndPlayImageDefault
        Remove-APICEMServiceTicket
#>
Function Get-APICEMNetworkPlugAndPlayImageDefault {
    Param (
        [Parameter()]
        [string]$ApicHost,

        [Parameter()]
        [string]$ServiceTicket,

        [Parameter()]
        [string]$PlatformID,

        [Parameter()]
        [string]$ProductID
    )

    $session = Get-APICEMHostIPAndServiceTicket -ApicHost $ApicHost -ServiceTicket $ServiceTicket        

    $uri = 'https://' + $session.ApicHost + '/api/v1/pnp-file/image/default'

    if(-not [string]::IsNullOrEmpty($PlatformID)) {
        $uri += '?platform=' + $PlatformID
    } elseif (-not [string]::IsNullOrEmpty($ProductID)) {
        $uri += '?productId=' + $ProductID
    }

    $response = Invoke-APICEMGetRequest -ServiceTicket $session.ServiceTicket -Uri $uri

    return $response
}
